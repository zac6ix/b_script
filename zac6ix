#!/bin/bash

#
# Custom system script
# Copyright © 2017, Zackie_Ai  "zac6ix"
# <zac6ix@gmail.com>
#
#Android_Matrix_Development
#DroidPeepz™ Inc

#start
START(){
clear
echo -e "                        \033[0;34m "
cecho P"" "                     \e[4m*||_http://www.droidpeepz.xyz_||*"
echo
cecho P ""  "                     \e[7m================================="
cecho C ""  "                    \e[7m===!! .Android System Script. !!==="
cecho G "" "                                     \e[7mFor"
cecho C "" "                                \e[7m*..MediaTek*"
echo
echo "                     ========*****************========"
cecho G ""  "                          ---> DroidPeepz™ Inc    "
cecho P ""  "                          ---> by : Zackie Ai   "
echo "                     ========*****************========"
cecho Y "" "                      **ANDROID MATRIX DEVELOPMENT**"
cecho P ""  "                     \e[7m^^^^====****=========****====^^^^"
echo
echo
echo
CT="$(date +"%r")"
DT="$(date +"%b-%d-%Y")"
cecho B "" "            \e[7m\e[3mMenu" "                        \033[0;36m\e[3m|| Time : $CT"
cecho C "" "            \e[3mHost System : $HOSTNAME" "          \033[0;36m\e[3m|| Date : $DT"
echo -e $nocol
cecho C "    R - " "Build ROM "
echo -e $nocol
cecho B "    Y - " "Build ROM [No Ninja] "
echo -e $nocol
cecho Y "    b - " "Build BOOT.IMG "
echo -e $nocol
cecho R "    x - " "Exit"
echo
}

 #MENU
EXT_MAIN(){
while :
do

  clear
  START
  read -p "           Enter option: " CHOICE
  case "$CHOICE" in
			R|r ) BUILD;;
			Y|y ) BUILD_NO_NINJA;;
			B|b ) BOOT;;
			X|x) EXIT;;
				*) cecho R "" "     Invalid option"; sleep 0.3; continue;;
	esac

done
}

#Build_rom  
BUILD(){
clear
. build/env*
sleep 3.0;
lunch lineage_w2-userdebug
sleep 3.0;
# [ patch]
echo
cecho P ""  "       \e[7m==> Applying Patch ... "
chmod 755 ./device/tecno/w2/patches/apply-patches.sh
./device/tecno/w2/patches/apply-patches.sh
echo
cecho G ""  "          D.O.N.E !!!   "
echo
    #./prebuilts/sdk/tools/jack-admin kill-server
    #rm -rf ~/.jack*
# IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT! IMPORTANT!
#
# Replace the value in the first of "ANDROID_JACK_VM_ARGS" with half of your ram
# (i.e.: if you have 8GB of ram, use "-Xmx4g")
#
    #export ANDROID_JACK_VM_ARGS="-Xmx8g -XX:+TieredCompilation -Dfile.encoding=UTF-8"
    #export SERVER_NB_COMPILE=4
    #export ANDROID_JACK_VM_ARGS=$JACK_SERVER_VM_ARGUMENT
sleep 3.0;
   #./prebuilts/sdk/tools/jack-admin install-server prebuilts/sdk/tools/jack-launcher.jar prebuilts/sdk/tools/jack-server-4.8.ALPHA.jar
    #./prebuilts/sdk/tools/jack-admin start-server
sleep 3.0;
#make clean
sleep 1.0;
clear
brunch w2
cecho G ""  "          D.O.N.E !!!   "
echo
echo
read -p "Press enter key to continue . . ."
echo
START
}

#Build_rom_without_ninja 
BUILD_NO_NINJA(){
clear
. build/env*
sleep 3.0;
lunch lineage_w2-userdebug
sleep 3.0;
# [ patch]
echo
cecho P ""  "       \e[7m==> Applying Patch ... "
chmod 755 ./device/tecno/w2/patches/apply-patches.sh
./device/tecno/w2/patches/apply-patches.sh
echo
cecho G ""  "          D.O.N.E !!!   "
echo
export USE_NINJA=false
sleep 3.0;
#make clean
sleep 1.0;
clear
brunch w2
cecho G ""  "          D.O.N.E !!!   "
echo
echo
read -p "Press enter key to continue . . ."
echo
START
}


#Build_rom  
BOOT(){
clear
. build/env*
sleep 3.0;
lunch lineage_w2-userdebug
sleep 3.0;
# [ ---] 
echo
cecho P ""  "       \e[7m==> Building BOOT.IMG Only ... "
sleep 1.0;
clear
mka -j5 bootimage
cecho G ""  "          D.O.N.E !!!   "
echo
echo
read -p "Press enter key to continue . . ."
echo
START
}

#EXIT
EXIT(){
clear
 cecho C "" "Talent Is Nothing WIthout Ethics!!!"
 sleep 1.0;
 clear
exit
}

# Colors
cecho ()
   {
   #Case didn't work out for me in cygwin
   if [ "$1" == "R" ]
then
  echo -e "$2""\033[0;91m$3\033[0m""$4" # Red
elif  [ "$1" == "G" ]
then
  echo -e "$2""\033[0;92m$3\033[0m""$4" # Green
elif  [ "$1" == "Y" ]
then
  echo -e "$2""\033[0;93m$3\033[0m""$4" # Yellow
elif  [ "$1" == "B" ]
then
  echo -e "$2""\033[0;94m$3\033[0m""$4" # Blue
elif  [ "$1" == "P" ]
then
  echo -e "$2""\033[0;95m$3\033[0m""$4" # Purple
elif  [ "$1" == "C" ]
then
  echo -e "$2""\033[0;96m$3\033[0m""$4" # Cyan
elif  [ "$1" == "W" ]
then
  echo -e "$2""\033[0;97m$3\033[0m""$4" # White
 fi
}

blue='\033[0;34m'
cyan='\033[0;36m'
yellow='\033[0;33m'
red='\033[0;31m'
nocol='\033[0m'

#DEPLOYING function
EXT_MAIN
